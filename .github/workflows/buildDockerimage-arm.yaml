name: buildDockerImageARM

# Trigger the workflow on push events to tags that match the pattern "v*.*.*"
on:
  push:
    tags:
      - "v*.*.*"
  # Optionally, uncomment the lines below to trigger the workflow on pull requests to the master branch
  # pull_request:
  #   branches:
  #     - "master"

jobs:
  docker:
    # Specifies that the job should run on the latest version of Ubuntu
    runs-on: ubuntu-latest
    steps:
      # Check out the repository’s code
#        signifie récupérer le code source d'un dépôt Git dans l'environnement d'exécution
#        du workflow. Lorsque vous utilisez l'action actions/checkout dans GitHub Actions,
#        elle télécharge le code source de votre dépôt GitHub afin qu'il soit accessible pour les étapes suivantes du workflow.
      - name: Checkout
        uses: actions/checkout@v3

      # Set up metadata for Docker images to be used for tagging
      - name: Docker meta
#        fait référence aux informations supplémentaires que vous pouvez utiliser pour annoter
#        ou décrire les images Docker que vous construisez. Ces métadonnées peuvent inclure des tags, des labels,
#        ou d'autres informations qui aident à identifier ou à organiser les images Docker.
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nourchawebi/astonvilla
          # List of Docker images to use as base name for tags

          # Generate Docker tags based on different events and attributes
          tags: |
            type=schedule                # Tag based on scheduled events (if any)
            type=ref,event=branch       # Tag based on branch references
            type=ref,event=pr           # Tag based on pull request references
            type=semver,pattern={{version}}  # Semantic versioning tag
            type=semver,pattern={{major}}.{{minor}} # Major and minor version tag
            type=semver,pattern={{major}}    # Major version tag
            type=sha                    # Tag based on SHA hash of the commit

      # Set up QEMU for emulating different architectures (needed for building ARM images)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Set up Docker Buildx for building Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry (GHCR) for pushing images
      - name: Login to GHCR
        if: github.event_name != 'pull_request'  # Only login if the event is not a pull request
        uses: docker/login-action@v2
        with:
          registry: ghcr.io                    # GHCR registry URL
          username: ${{ github.repository_owner }}  # Username for GHCR (typically the repository owner)
          password: ${{ secrets.GITHUB_TOKEN }}     # Access token for GHCR (stored as a secret)

      # Build and push the Docker image
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .                            # Directory containing the Dockerfile and build context
          push: true
          tags: ${{ steps.meta.outputs.tags }}   # Tags generated by the Docker meta action
          labels: ${{ steps.meta.outputs.labels }}  # Labels generated by the Docker meta action
